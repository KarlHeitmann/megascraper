{"version":3,"sources":["img/perfil.jpg","utils.js","pages/motos.jsx","sidebar/motos_sidebar.jsx","table_columnas/workana_jobs.js","pages/workana_jobs.jsx","sidebar/workana_sidebar.jsx","pages/workana_mongo.jsx","table_columnas/infosubvenciones.js","pages/extra.jsx","pages/workana_grafs.jsx","pages/bienvenido.jsx","sidebar/bienvenido_sidebar.jsx","table_columnas/autos.js","pages/autos.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","DOMAIN","Motos","MotosSidebar","workana_jobs_columns","title","dataIndex","key","render","text","row","index","href","record","size","onClick","console","log","url_request","_id","axios","delete","then","response","put","deshabilitado","layout","labelCol","span","wrapperCol","tailLayout","offset","WorkanaJobs","props","useState","workana_jobs","setWorkanaJobs","className","name","initialValues","remember","onFinish","values","pages","get","data","onFinishFailed","errorInfo","Item","label","type","htmlType","dataSource","columns","WorkanaSidebar","mode","style","height","borderRight","SubMenu","icon","UserOutlined","to","LaptopOutlined","WorkanaMongo","useEffect","infosubvenciones_columns","url_path","Extra","infosubvenciones","setInfosubvenciones","a","rows","WorkanaGrafs","setData","commerce","filter","r","titulo","match","length","scrap","laravel","python","rails","labels","datasets","backgroundColor","hoverBackgroundColor","Title","Typography","Paragraph","Bienvenido","gutter","width","src","foto_perfil","BienvenidoSidebar","defaultSelectedKeys","defaultOpenKeys","autos_columns","Autos","autos","setAutos","Footer","Layout","Content","Header","Sider","App","useLocation","pathname","theme","path","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"qFAAAA,EAAOC,QAAU,IAA0B,oC,+ECG3CD,EAAOC,QAAU,CACfC,OAJa,K,kLC+HAC,I,SCzGAC,I,6CCuDAC,EApEc,CAC3B,CACEC,MAAO,SACPC,UAAW,SACXC,IAAK,UAEP,CACEF,MAAO,MACPC,UAAW,MACXC,IAAK,MACLC,OAAQ,SAACC,EAAMC,EAAKC,GAClB,OAAO,uBAAGC,KAAMH,GAAT,QAGX,CACEJ,MAAO,uBACPC,UAAW,oBACXC,IAAK,qBAEP,CACEF,MAAO,SACPC,UAAW,SACXC,IAAK,UAEP,CACEF,MAAO,aACPC,UAAW,aACXC,IAAK,cAEP,CACEF,MAAO,iBACPC,UAAW,cACXC,IAAK,eAEP,CACEF,MAAO,WACPC,UAAW,WACXC,IAAK,YAEP,CACEF,MAAO,SACPE,IAAK,SACLC,OAAQ,SAACC,EAAMI,GAAP,OACN,kBAAC,IAAD,CAAOC,KAAK,UAEV,kBAAC,IAAD,CAAQC,QAAS,WACbC,QAAQC,IAAI,SACZ,IAAMC,EAAW,UAAMjB,SAAN,wBAA4BY,EAAOM,KACpDC,IAAMC,OAAOH,GACVI,MAAK,SAAAC,GACJP,QAAQC,IAAIM,QALpB,UASA,kBAAC,IAAD,CAAQR,QAAS,WACbC,QAAQC,IAAI,SACZ,IAAMC,EAAW,UAAMjB,SAAN,wBAA4BY,EAAOM,KACpDC,IAAMI,IAAIN,EAAa,CAACO,eAAe,IACpCH,MAAK,SAAAC,GACJP,QAAQC,IAAIM,QALpB,oBChDFG,EAAS,CACbC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAEhBE,EAAa,CACjBD,WAAY,CAAEE,OAAQ,EAAGH,KAAM,KAiFlBI,MA9Ef,SAAqBC,GAAQ,IAAD,EACaC,mBAAS,IADtB,mBACnBC,EADmB,KACLC,EADK,KA4B1B,OACE,oCACE,wBAAIC,UAAU,SAAd,WACA,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,iBACMX,EADN,CAEEY,KAAK,QACLC,cAAe,CAAEC,UAAU,GAC3BC,SAlCU,SAACC,GACnB1B,QAAQC,IAAI,eACZD,QAAQC,IAAIyB,GAFkB,IAGtBC,EAAUD,EAAVC,MACFzB,EAAW,UAAMjB,SAAN,4BAAgC0C,EAAQ,UAAYA,EAAQ,IAC7EvB,IAAMwB,IAAI1B,GACPI,MAAK,SAAAC,GAAa,IACTY,EAAiBZ,EAASsB,KAA1BV,aACRnB,QAAQC,IAAIkB,GACZC,EAAgBD,OA0BZW,eAda,SAAAC,GACrB/B,QAAQC,IAAI,UAAW8B,MAef,kBAAC,IAAKC,KAAN,CACEC,MAAM,iBACNX,KAAK,SAGL,kBAAC,IAAD,OAGF,kBAAC,IAAKU,KAASlB,EACb,kBAAC,IAAD,CAAQoB,KAAK,UAAUC,SAAS,UAAhC,cAsBJ,kBAAC,IAAD,CAAOC,WAAYjB,EAAckB,QAASjD,M,SCvDrCkD,MA/Bf,SAAwBrB,GACtB,OACE,kBAAC,IAAD,CACEsB,KAAK,SAGLC,MAAO,CAAEC,OAAQ,OAAQC,YAAa,IAEtC,kBAAC,IAAKC,QAAN,CAAcpD,IAAI,OAAOqD,KAAM,kBAACC,EAAA,EAAD,MAAkBxD,MAAM,UACrD,kBAAC,IAAK2C,KAAN,CAAWzC,IAAI,KACb,kBAAC,IAAD,CAAMuD,GAAG,YAAT,aAIF,kBAAC,IAAKd,KAAN,CAAWzC,IAAI,KACb,kBAAC,IAAD,CAAMuD,GAAG,kBAAT,sBAKJ,kBAAC,IAAKH,QAAN,CAAcpD,IAAI,OAAOqD,KAAM,kBAACG,EAAA,EAAD,MAAoB1D,MAAM,YACvD,kBAAC,IAAK2C,KAAN,CAAWzC,IAAI,KACb,kBAAC,IAAD,CAAMuD,GAAG,kBAAT,gBCIKE,MAzBf,SAAsB/B,GAAQ,IAAD,EACYC,mBAAS,IADrB,mBACpBC,EADoB,KACNC,EADM,KAiB3B,OAfA6B,qBAAU,WAERjD,QAAQC,IAAI,aACZ,IAAMC,EAAW,UAAMjB,SAAN,gCAEjBmB,IAAMwB,IAAI1B,GACPI,MAAK,SAAAC,GACJP,QAAQC,IAAIM,GACZ,IAAMY,EAAeZ,EAASsB,KAC9B7B,QAAQC,IAAIkB,GACZC,EAAgBD,QAEnB,IAID,oCACE,wBAAIE,UAAU,SAAd,iBACA,kBAAC,IAAD,CAAOe,WAAYjB,EAAckB,QAASjD,M,2BCwBjC8D,EA/CkB,CAC/B,CACE7D,MAAO,WACPC,UAAW,MACXC,IAAK,IACLC,OAAQ,SAACC,EAAMC,EAAKC,GAClB,IAAMwD,EAAQ,uEAAmEzD,EAAI,IACrF,OAAO,uBAAGE,KAAMuD,GAAWA,KAG/B,CACE9D,MAAO,iBACPC,UAAW,IACXC,IAAK,KAEP,CACEF,MAAO,eACPC,UAAW,IACXC,IAAK,KAEP,CACEF,MAAO,YACPC,UAAW,IACXC,IAAK,KAEP,CACEF,MAAO,oBACPC,UAAW,IACXC,IAAK,KAEP,CACEF,MAAO,+BACPC,UAAW,IACXC,IAAK,KAEP,CACEF,MAAO,iBACPC,UAAW,IACXC,IAAK,KAEP,CACEF,MAAO,UACPC,UAAW,IACXC,IAAK,MCpCHmB,EAAS,CACbC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAEhBE,EAAa,CACjBD,WAAY,CAAEE,OAAQ,EAAGH,KAAM,KA4DlBwC,MAzDf,SAAenC,GAAQ,IAAD,EAC4BC,mBAAS,IADrC,mBACbmC,EADa,KACKC,EADL,iDAOpB,WAA2B5B,GAA3B,iBAAA6B,EAAA,sDACEvD,QAAQC,IAAI,SAEJ0B,EAAUD,EAAVC,MACFzB,EAJR,UAIyBjB,SAJzB,0BAIiD0C,EAAQ,UAAYA,EAAQ,IAC3EvB,IAAMwB,IAAI1B,GACPI,MAAK,SAAAC,GAAa,IACTiD,EAASjD,EAASsB,KAAlB2B,KACRxD,QAAQC,IAAIuD,GACZF,EAAoBE,MAT1B,4CAPoB,sBAmBpB,OACE,oCACE,wBAAInC,UAAU,SAAd,SACA,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,iBACMX,EADN,CAEEY,KAAK,QACLC,cAAe,CAAEC,UAAU,GAC3BC,SA5BU,4CA6BVK,eA1Ba,SAAAC,GACrB/B,QAAQC,IAAI,UAAW8B,MA2Bf,kBAAC,IAAKC,KAAN,CACEC,MAAM,iBACNX,KAAK,SAGL,kBAAC,IAAD,OAGF,kBAAC,IAAKU,KAASlB,EACb,kBAAC,IAAD,CAAQoB,KAAK,UAAUC,SAAS,UAAhC,cAOR,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,WAAYiB,EACZhB,QAASa,O,SCdJO,MApDf,SAAsBxC,GAAQ,IAAD,EACHC,mBAAS,IADN,mBACpBW,EADoB,KACd6B,EADc,KA4C3B,OA1CAT,qBAAU,WAERjD,QAAQC,IAAI,aACZ,IAAMC,EAAW,UAAMjB,SAAN,2BAEjBmB,IAAMwB,IAAI1B,GACPI,MAAK,SAAAC,GAEJ,IAAMY,EAAeZ,EAASsB,KACxB8B,EAAWxC,EAAayC,QAAO,SAAAC,GAAC,OAAIA,EAAEC,OAAOC,MAAM,iBAAeC,OAClEC,EAAW9C,EAAayC,QAAO,SAAAC,GAAC,OAAIA,EAAEC,OAAOC,MAAM,cAAYC,OAC/DE,EAAW/C,EAAayC,QAAO,SAAAC,GAAC,OAAIA,EAAEC,OAAOC,MAAM,gBAAcC,OACjEG,EAAWhD,EAAayC,QAAO,SAAAC,GAAC,OAAIA,EAAEC,OAAOC,MAAM,eAAaC,OAChEI,EAAWjD,EAAayC,QAAO,SAAAC,GAAC,OAAIA,EAAEC,OAAOC,MAAM,cAAYC,OAGrEN,EAAQ,CACNW,OAAQ,CACN,WAAY,QAAS,UAAW,SAAU,SAE5CC,SAAU,CAAC,CACTzC,KAAM,CAAC8B,EAAUM,EAAOC,EAASC,EAAQC,GACzCG,gBAAiB,CACjB,UACA,UACA,UACA,UACA,WAEAC,qBAAsB,CACtB,UACA,UACA,UACA,UACA,oBAMP,IAGD,oCACE,wBAAInD,UAAU,SAAd,WACA,kBAAC,WAAD,CAAUQ,KAAMA,M,oCCzCd4C,EAAqBC,IAArBD,MAAOE,EAAcD,IAAdC,UAoDAC,MAlDf,SAAoB3D,GAClB,OACE,kBAAC,IAAD,CAAK4D,OAAQ,IACX,kBAAC,IAAD,KACE,yBAAKxD,UAAU,UACb,kBAAC,IAAD,CACEA,UAAU,SACVyD,MAAO,IACPC,IAAKC,QAIX,kBAAC,IAAD,KACE,kBAACP,EAAD,2CACA,kBAACE,EAAD,0bAMA,kBAACA,EAAD,kaAKA,kBAACA,EAAD,sbAKA,kBAACA,EAAD,8uBAOA,kBAACA,EAAD,iiBAKA,kBAACA,EAAD,6JCjCOM,MAff,SAA2BhE,GACzB,OACE,kBAAC,IAAD,CACEsB,KAAK,SACL2C,oBAAqB,CAAC,KACtBC,gBAAiB,CAAC,QAClB3C,MAAO,CAAEC,OAAQ,OAAQC,YAAa,IAEtC,kBAAC,IAAKC,QAAN,CAAcpD,IAAI,OAAOqD,KAAM,kBAACC,EAAA,EAAD,MAAkBxD,MAAM,cACrD,kBAAC,IAAK2C,KAAN,CAAWzC,IAAI,KAAf,0BCgBO6F,EA1BO,CACpB,CACE/F,MAAO,SACPC,UAAW,OACXC,IAAK,QAEP,CACEF,MAAO,cACPC,UAAW,cACXC,IAAK,eAEP,CACEF,MAAO,SACPC,UAAW,SACXC,IAAK,UAEP,CACEF,MAAO,MACPC,UAAW,MACXC,IAAK,MACLC,OAAQ,SAACC,EAAMC,EAAKC,GAClB,OAAO,uBAAGC,KAAMH,GAAT,SCXPiB,EAAS,CACbC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAEhBE,EAAa,CACjBD,WAAY,CAAEE,OAAQ,EAAGH,KAAM,KAyDlByE,MAtDf,SAAepE,GAAO,MAEMC,mBAAS,IAFf,mBAEboE,EAFa,KAENC,EAFM,KAqBpB,OACE,oCACE,qCACA,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,iBACM7E,EADN,CAEEY,KAAK,QACLC,cAAe,CAAEC,UAAU,GAC3BC,SA1BU,SAACC,GACnB1B,QAAQC,IAAI,eACZD,QAAQC,IAAIyB,GAFkB,IAGtBC,EAAUD,EAAVC,MACFzB,EAAW,UAAMjB,SAAN,0BAA8B0C,EAAQ,UAAYA,EAAQ,IAC3EvB,IAAMwB,IAAI1B,GACPI,MAAK,SAAAC,GACJ,IAAM+E,EAAQ/E,EAASsB,KACvB7B,QAAQC,IAAIqF,GACZC,EAASD,OAkBLxD,eAZa,SAAAC,OAcb,kBAAC,IAAKC,KAAN,CACEC,MAAM,iBACNX,KAAK,SAGL,kBAAC,IAAD,OAGF,kBAAC,IAAKU,KAASlB,EACb,kBAAC,IAAD,CAAQoB,KAAK,UAAUC,SAAS,UAAhC,cAOR,kBAAC,IAAD,CAAOC,WAAYkD,EAAOjD,QAAS+C,MChDvCI,EAIEC,IAJFD,OACAE,EAGED,IAHFC,QACAC,EAEEF,IAFFE,OACAC,GACEH,IADFG,MAyEaC,OAtEf,WAEE,OADA7F,QAAQC,IAAI6F,IAAYC,UAEtB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAACJ,EAAD,KACE,yBAAKtE,UAAU,SACf,kBAAC,IAAD,CAAM2E,MAAM,OAAOzD,KAAK,aAAa2C,oBAAqB,IACxD,kBAAC,IAAKlD,KAAN,CAAWzC,IAAI,KACb,kBAAC,IAAD,CAAMuD,GAAG,KAAT,eAIF,kBAAC,IAAKd,KAAN,CAAWzC,IAAI,KACb,kBAAC,IAAD,CAAMuD,GAAG,YAAT,YAEF,kBAAC,IAAKd,KAAN,CAAWzC,IAAI,KACb,kBAAC,IAAD,CAAMuD,GAAG,UAAT,UAEF,kBAAC,IAAKd,KAAN,CAAWzC,IAAI,KACb,kBAAC,IAAD,CAAMuD,GAAG,UAAT,YAIN,kBAAC,IAAD,KACA,kBAAC8C,GAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOK,KAAK,YACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,qCAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,qCAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,SAIN,kBAACP,EAAD,CAASrE,UAAU,aACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO4E,KAAK,kBACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,kBACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,YACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,UAKN,kBAACT,EAAD,kBCnFYU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAStC,MACvB,2DCZNuC,IAAS9G,OACP,kBAAC,IAAM+G,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtG,MAAK,SAAAuG,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLhH,QAAQgH,MAAMA,EAAMC,c","file":"static/js/main.ba1e9b8a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/perfil.dae400f4.jpg\";","const DOMAIN = (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') ? `http://localhost:4000` : ``\n\n\nmodule.exports = {\n  DOMAIN,\n}","import React, {useEffect, useState} from 'react';\nimport {\n  Table,\n  Button,\n} from 'antd';\nimport axios from 'axios';\nimport { DOMAIN } from '../utils';\n\nfunction Motos(props) {\n  const [motos, setMotos] = useState([]);\n  const columns = [\n    {\n      title: 'Titulo',\n      dataIndex: 'titulo',\n      key: 'titulo',\n    },\n    {\n      title: 'URL',\n      dataIndex: 'url',\n      key: 'url',\n      render: (text, row, index) => {\n        return <a href={text}>Ir</a>\n        // if (index < 4) {\n        //   return <a>{text}</a>;\n        // }\n        // return {\n        //   children: <a>{text}</a>,\n        //   props: {\n        //     colSpan: 5,\n        //   },\n        // };\n      },\n    },\n    {\n      title: 'precio',\n      dataIndex: 'precio',\n      key: 'precio',\n      sortDirections: ['ascend', 'descend'],\n      sorter: (a, b) => Number(a.precio) > Number(b.precio),\n      render: (text, row, index) => {\n        // let salida = []\n        // let partida = true\n        // for (let i=(text.length - 1); i>=0; i--) {\n        //   if (partida) {\n        //     partida = false\n        //   } else {\n        //     if ((i%3) == 0) {\n        //       salida.unshift(\".\")\n        //     }\n        //   }\n        //   salida.unshift(text[i])\n        // }\n\n        // return salida.join(\"\");\n        return text\n      }\n      \n    },\n    {\n      title: 'Cilindrada',\n      dataIndex: 'cilindrada',\n      key: 'cilindrada',\n      sortDirections: ['ascend', 'descend'],\n      sorter: (a, b) => Number(a.cilindrada) > Number(b.cilindrada),\n    },\n    {\n      title: 'Año',\n      dataIndex: 'year',\n      key: 'year',\n    },\n    {\n      title: 'Kilometraje',\n      dataIndex: 'kilometraje',\n      key: 'kilometraje',\n    },\n    {\n      title: 'Ciudad',\n      dataIndex: 'ciudad',\n      key: 'ciudad',\n    },\n    {\n      title: 'Fecha',\n      dataIndex: 'fecha',\n      key: 'fecha',\n    },\n    {\n      title: 'Descripciòn',\n      dataIndex: 'descripcion',\n      key: 'descripcion',\n    },\n  ];\n\n  useEffect(() => {\n    console.log(\"useEffect\");\n    const url_request = `${DOMAIN}/api/yapomotos`;\n    axios.get(url_request)\n      .then(response => {\n        const motos = response.data;\n        console.log(motos)\n        setMotos( motos )\n      })\n  }, [])\n\n  const onBtnScrape = () => {\n    console.log(\"onBtnScrape\")\n    const url_request = `${DOMAIN}/scrapers/motos`;\n    axios.get(url_request)\n      .then(response => {\n        const { motos } = response.data;\n        console.log(motos)\n        setMotos( motos )\n      })\n  }\n\n  return(\n    <>\n      <Button\n        type=\"primary\"\n        onClick={onBtnScrape}\n        >\n        Scrape\n      </Button>\n      <Table dataSource={motos} columns={columns} />\n    </>\n  )\n}\n\nexport default Motos;","import React from 'react';\nimport {\n  Menu,\n} from 'antd';\n\nimport { UserOutlined, LaptopOutlined, NotificationOutlined } from '@ant-design/icons';\n\nfunction MotosSidebar(props) {\n  return(\n    <Menu\n      mode=\"inline\"\n      defaultSelectedKeys={['1']}\n      defaultOpenKeys={['sub1']}\n      style={{ height: '100%', borderRight: 0 }}\n      >\n      <Menu.SubMenu key=\"sub1\" icon={<UserOutlined />} title=\"Datos\">\n        <Menu.Item key=\"1\">Inicio</Menu.Item>\n      </Menu.SubMenu>\n    </Menu>\n  )\n}\n\nexport default MotosSidebar;\n","import React from 'react';\nimport {\n  Space,\n  Button,\n} from 'antd';\nimport axios from 'axios';\nimport { DOMAIN } from '../utils';\n\n\nconst workana_jobs_columns = [\n  {\n    title: 'Titulo',\n    dataIndex: 'titulo',\n    key: 'titulo',\n  },\n  {\n    title: 'URL',\n    dataIndex: 'url',\n    key: 'url',\n    render: (text, row, index) => {\n      return <a href={text}>Ir</a>\n    },\n  },\n  {\n    title: 'Fecha publicación',\n    dataIndex: 'fecha_publicacion',\n    key: 'fecha_publicacion',\n  },\n  {\n    title: 'Precio',\n    dataIndex: 'precio',\n    key: 'precio',\n  },\n  {\n    title: 'Propuestas',\n    dataIndex: 'propuestas',\n    key: 'propuestas',\n  },\n  {\n    title: 'Descripción',\n    dataIndex: 'descripcion',\n    key: 'descripcion',\n  },\n  {\n    title: 'Deadline',\n    dataIndex: 'deadline',\n    key: 'deadline',\n  },\n  {\n    title: 'Action',\n    key: 'action',\n    render: (text, record) => (\n      <Space size=\"middle\">\n        {/* <a>Invite {record.url}</a> */}\n        <Button onClick={() => {\n            console.log(\"click\")\n            const url_request = `${DOMAIN}/api/workana/${record._id}`;\n            axios.delete(url_request)\n              .then(response => {\n                console.log(response)\n              })\n          }}\n          >Delete</Button>\n        <Button onClick={() => {\n            console.log(\"click\")\n            const url_request = `${DOMAIN}/api/workana/${record._id}`;\n            axios.put(url_request, {deshabilitado: true})\n              .then(response => {\n                console.log(response)\n              })\n          }}\n          >Deshabilitar</Button>\n      </Space>\n    ),\n  },\n];\n\nexport default workana_jobs_columns;","import React, {useState} from 'react';\nimport {\n  Table,\n  Button,\n  Row,\n  Col,\n  Input,\n  Form\n} from 'antd';\nimport axios from 'axios';\n\nimport workana_jobs_columns from '../table_columnas/workana_jobs';\nimport { DOMAIN } from '../utils';\n\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\n\nfunction WorkanaJobs(props) {\n  const [workana_jobs, setWorkanaJobs] = useState([])\n  \n  const onBtnScrape = (values) => {\n    console.log(\"onBtnScrape\");\n    console.log(values);\n    const { pages } = values\n    const url_request = `${DOMAIN}/scrapers/workana${pages ? \"?pages=\" + pages : \"\" }`;\n    axios.get(url_request)\n      .then(response => {\n        const { workana_jobs } = response.data;\n        console.log(workana_jobs)\n        setWorkanaJobs( workana_jobs )\n      })\n  }\n\n  const onInputChange = (text) => {\n    console.log(text)\n  }\n\n  const onFinish = values => {\n    console.log('Success:', values);\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return(\n    <>\n      <h1 className=\"title\">Workana</h1>\n      <Row>\n        <Col>\n          <Form\n            {...layout}\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onBtnScrape}\n            onFinishFailed={onFinishFailed}\n          >\n            <Form.Item\n              label=\"Pages to scrap\"\n              name=\"pages\"\n              // rules={[{ required: true, message: 'Please input your username!' }]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item {...tailLayout}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n          {/* <Input\n            addonBefore=\"https://\"\n            addonAfter=\".com\"\n            defaultValue=\"workana\"\n            onChange={onInputChange}\n            />\n          <Button\n            type=\"primary\"\n            onClick={onBtnScrape}\n            >\n            Scrape\n          </Button> */}\n\n        </Col>\n      </Row>\n      {/* <Row>\n        <Col> */}\n          <Table dataSource={workana_jobs} columns={workana_jobs_columns} />\n        {/* </Col>\n      </Row> */}\n    </>\n  )\n}\n\nexport default WorkanaJobs;","import React from 'react';\nimport {\n  Menu,\n} from 'antd';\n\nimport { UserOutlined, LaptopOutlined, NotificationOutlined } from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\n\nfunction WorkanaSidebar(props) {\n  return(\n    <Menu\n      mode=\"inline\"\n      // defaultSelectedKeys={['1']}\n      // defaultOpenKeys={['sub1']}\n      style={{ height: '100%', borderRight: 0 }}\n      >\n      <Menu.SubMenu key=\"sub1\" icon={<UserOutlined />} title=\"Scrape\">\n        <Menu.Item key=\"1\">\n          <Link to=\"/workana\">\n            Scraping\n          </Link>\n        </Menu.Item>\n        <Menu.Item key=\"2\">\n          <Link to=\"/workana/mongo\">\n            Visualizar Mongo\n          </Link>\n        </Menu.Item>\n      </Menu.SubMenu>\n      <Menu.SubMenu key=\"sub2\" icon={<LaptopOutlined />} title=\"Graficos\">\n        <Menu.Item key=\"3\">\n          <Link to=\"/workana/grafs\">\n            Graficos\n          </Link>\n        </Menu.Item>\n      </Menu.SubMenu>\n    </Menu>\n  )\n}\n\nexport default WorkanaSidebar;\n","import React, {useEffect, useState} from 'react';\nimport {\n  Table,\n} from 'antd';\nimport axios from 'axios';\nimport { DOMAIN } from '../utils';\n\nimport workana_jobs_columns from '../table_columnas/workana_jobs';\n\nfunction WorkanaMongo(props) {\n  const [workana_jobs, setWorkanaJobs] = useState([])\n  useEffect(() => {\n\n    console.log(\"useEffect\");\n    const url_request = `${DOMAIN}/api/workana/filtrar_scraper`;\n    // const url_request = `${DOMAIN}/api/workana`;\n    axios.get(url_request)\n      .then(response => {\n        console.log(response)\n        const workana_jobs = response.data;\n        console.log(workana_jobs)\n        setWorkanaJobs( workana_jobs )\n      })\n  }, [])\n\n\n  return (\n    <>\n      <h1 className=\"title\">Workana Mongo</h1>\n      <Table dataSource={workana_jobs} columns={workana_jobs_columns} />\n    </>\n  );\n};\n\nexport default WorkanaMongo;","import React from 'react';\nimport {\n  Space,\n  Button,\n} from 'antd';\n\nconst infosubvenciones_columns = [\n  {\n    title: 'detalles',\n    dataIndex: 'url',\n    key: '0',\n    render: (text, row, index) => {\n      const url_path = `https://www.infosubvenciones.es/bdnstrans/GE/es/convocatoria/${row[7]}`\n      return <a href={url_path}>{url_path}</a>\n    }\n  },\n  {\n    title: 'Administracion',\n    dataIndex: '1',\n    key: '1',\n  },\n  {\n    title: 'Departamento',\n    dataIndex: '2',\n    key: '2',\n  },\n  {\n    title: 'Órgano',\n    dataIndex: '3',\n    key: '3',\n  },\n  {\n    title: 'Fecha de Registro',\n    dataIndex: '4',\n    key: '4',\n  },\n  {\n    title: 'Título de la convocatoria',\n    dataIndex: '5',\n    key: '5',\n  },\n  {\n    title: 'BB Reguladoras',\n    dataIndex: '6',\n    key: '6',\n  },\n  {\n    title: 'ID BDNS',\n    dataIndex: '7',\n    key: '7',\n  }\n]\n\nexport default infosubvenciones_columns;","import React, {useState} from 'react';\nimport {\n  Table,\n  Button,\n  Row,\n  Col,\n  Input,\n  Form\n} from 'antd';\nimport axios from 'axios';\nimport infosubvenciones_columns from '../table_columnas/infosubvenciones';\nimport { DOMAIN } from '../utils';\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\n\nfunction Extra(props) {\n  const [infosubvenciones, setInfosubvenciones] = useState([])\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  async function onBtnScrape(values) {\n    console.log(\"click\")\n    // const url_request = `${DOMAIN}/scrapers/workana${pages ? \"?pages=\" + pages : \"\" }`;\n    const { pages } = values\n    const url_request = `${DOMAIN}/scrapers/extra${pages ? \"?pages=\" + pages : \"\" }`;\n    axios.get(url_request)\n      .then(response => {\n        const { rows } = response.data\n        console.log(rows)\n        setInfosubvenciones(rows)\n      })\n  }\n  return(\n    <>\n      <h1 className=\"title\">Extra</h1>\n      <Row>\n        <Col>\n          <Form\n            {...layout}\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onBtnScrape}\n            onFinishFailed={onFinishFailed}\n          >\n            <Form.Item\n              label=\"Pages to scrap\"\n              name=\"pages\"\n              // rules={[{ required: true, message: 'Please input your username!' }]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item {...tailLayout}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n      <Row>\n        <Table\n          dataSource={infosubvenciones}\n          columns={infosubvenciones_columns}\n          />\n      </Row>\n    </>\n  );\n};\n\nexport default Extra;","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport { DOMAIN } from '../utils';\nimport { Doughnut } from 'react-chartjs-2';\n\nfunction WorkanaGrafs(props) {\n  const [data, setData] = useState({})\n  useEffect(() => {\n\n    console.log(\"useEffect\");\n    const url_request = `${DOMAIN}/api/workana/grafs_data`;\n    // const url_request = `${DOMAIN}/api/workana`;\n    axios.get(url_request)\n      .then(response => {\n        // console.log(response)\n        const workana_jobs = response.data;\n        const commerce = workana_jobs.filter(r => r.titulo.match(/commerce/gi)).length\n        const scrap    = workana_jobs.filter(r => r.titulo.match(/scrap/gi)).length\n        const laravel  = workana_jobs.filter(r => r.titulo.match(/laravel/gi)).length\n        const python   = workana_jobs.filter(r => r.titulo.match(/python/gi)).length\n        const rails    = workana_jobs.filter(r => r.titulo.match(/rails/gi)).length\n        // console.log(commerce, scrap, laravel, python, rails)\n        // console.log(workana_jobs)\n        setData({\n          labels: [\n            'commerce', 'scrap', 'laravel', 'python', 'rails'\n          ],\n          datasets: [{\n            data: [commerce, scrap, laravel, python, rails],\n            backgroundColor: [\n            '#FF6384',\n            '#36A2EB',\n            '#FFCE56',\n            '#8463FF',\n            '#56CEFF',\n            ],\n            hoverBackgroundColor: [\n            '#DF6384',\n            '#06A2CB',\n            '#DFCE56',\n            '#6463FF',\n            '#36CEFF',\n            ]\n          }]\n        })\n        // setWorkanaJobs( workana_jobs )\n      })\n  }, [])\n\n  return (\n    <>\n      <h1 className=\"title\">Cuentas</h1>\n      <Doughnut data={data}/>\n    </>\n  );\n}\n\nexport default WorkanaGrafs;","import React from 'react';\nimport {\n  Typography,\n  Row,\n  Col,\n  Image,\n} from 'antd';\n\nimport foto_perfil from '../img/perfil.jpg'\n\n\nconst { Title, Paragraph } = Typography;\n\nfunction Bienvenido(props) {\n  return (\n    <Row gutter={16}>\n      <Col>\n        <div className=\"avatar\">\n          <Image\n            className=\"avatar\"\n            width={200}\n            src={foto_perfil}\n            />\n        </div>\n      </Col>\n      <Col>\n        <Title>Bienvenido a mi aplicación web.</Title>\n        <Paragraph>\n          Soy Karl Heitmann, un artesando del siglo XXI. Esta aplicación web la comencé por necesidad personal. En mayo del 2020 descubrí el webscraping, y fue una técnica\n          que me asombró por completo. Encontré increíble que se pudiera ocupar algunas librerías en conjunto con unos lenguajes de programación para poder solicitar\n          una página web, y a partir del código HTML extraer la información que necesito.\n\n        </Paragraph>\n        <Paragraph>\n          Encontré fantástico además que existiera una gran diversidad de herramientas que permitiera facilitar esta tarea. Por lo que me dediqué por completo a estudiar\n          el asunto y tomar todos los cursos que estuvieran a mi alcance. Así fue como partí con lo básico en Python, luego utilicé Selenium Web Browser, y finalmente aprendí\n          a efectuar técnicas de scraping con un stack en NodeJS\n        </Paragraph>\n        <Paragraph>\n          Fue así como decidí crear este proyecto con este título tan pomposo: MegaScraper. Como estaba buscando una moto en ese entonces, decidí hacer un scraper para extraer\n          información de anuncios clasificados de motos en la célebre página \"yapo.cl\". En Chile es super conocida. Este scraper consulta los últimos anuncios clasificados sobre\n          motos en el portal, extrae la información y la presenta en pantalla.\n        </Paragraph>\n        <Paragraph>\n          El scraper que pueden ver acá es el de Workana. El origen de este scraper es \"divertido\" (por ponerle un adjetivo), y es que cuando comencé a estudiar el web scraping, me dije:\n          sería extraordinario que tuviera un scraper revisando el sitio de Workana, y cada vez que saliera un proyecto sobre scraping me enviara un mensaje a mi telegram.\n          El asunto es que al final me puse manos a la obra con este proyecto, y lo hice en conjunto con el scraper de motos. El scraper de Workana me busca los nuevos anuncios,\n          los guarda en una base de datos, y cada vez que hace el scraping y guarda nuevas noticias, le pasa un filtro a todas las noticias de la base de datos, y los trabajos\n          que pasan este filtro se envían a mi cuenta de Telegram.\n        </Paragraph>\n        <Paragraph>\n          El bot que se comunica con mi cuenta de Telegram se llama \"megascrapeador\", y lo puedes encontrar en telegram buscando el siguiente usuario: \"@megascrapeadorbot\".\n          Búscalo en Telegram e inicia una conversación con él mandándole el mensaje \"/start\". Las instrucciones puede ser que no estén muy claras, pero es que las escribí para mi, al igual\n          que todo este sitio. Por eso que el diseño no es deslumbrante, pero a mi me funciona. Además, sirve para mostrarle a mis clientes un atisbo de las cosas que puedo hacer.\n        </Paragraph>\n        <Paragraph>\n          Más adelante voy a poner una descripción más profunda de cómo ocupar esta aplicación y como configurar el bot, de ser necesario...\n        </Paragraph>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Bienvenido","import React from 'react';\nimport {\n  Menu,\n} from 'antd';\n\nimport { UserOutlined, LaptopOutlined, NotificationOutlined } from '@ant-design/icons';\n\nfunction BienvenidoSidebar(props) {\n  return(\n    <Menu\n      mode=\"inline\"\n      defaultSelectedKeys={['1']}\n      defaultOpenKeys={['sub1']}\n      style={{ height: '100%', borderRight: 0 }}\n      >\n      <Menu.SubMenu key=\"sub1\" icon={<UserOutlined />} title=\"Bienvenido\">\n        <Menu.Item key=\"1\">¿Qué es esto?</Menu.Item>\n      </Menu.SubMenu>\n    </Menu>\n  )\n}\n\nexport default BienvenidoSidebar;\n","import React from 'react';\nimport {\n  Space,\n  Button,\n} from 'antd';\n\nconst autos_columns = [\n  {\n    title: 'Año',\n    dataIndex: 'year',\n    key: 'year',\n  },\n  {\n    title: 'Kilometraje',\n    dataIndex: 'kilometraje',\n    key: 'kilometraje',\n  },\n  {\n    title: 'Precio',\n    dataIndex: 'precio',\n    key: 'precio',\n  },\n  {\n    title: 'Url',\n    dataIndex: 'url',\n    key: 'url',\n    render: (text, row, index) => {\n      return <a href={text}>Ir</a>\n    },\n  }\n]\n\nexport default autos_columns;","import React, {useState} from 'react';\nimport {\n  Row,\n  Col,\n  Form,\n  Input,\n  Button,\n  Table,\n} from 'antd';\n\nimport axios from 'axios';\n\nimport workana_jobs_columns from '../table_columnas/workana_jobs';\nimport { DOMAIN } from '../utils';\nimport autos_columns from '../table_columnas/autos';\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\n\nfunction Autos(props) {\n  // const [workana_jobs, setWorkanaJobs] = useState([])\n  const [autos, setAutos] = useState([])\n\n  const onBtnScrape = (values) => {\n    console.log(\"onBtnScrape\");\n    console.log(values);\n    const { pages } = values\n    const url_request = `${DOMAIN}/scrapers/autos${pages ? \"?pages=\" + pages : \"\" }`;\n    axios.get(url_request)\n      .then(response => {\n        const autos = response.data;\n        console.log(autos)\n        setAutos(autos)\n        // const { workana_jobs } = response.data;\n        // console.log(workana_jobs)\n        // setWorkanaJobs( workana_jobs )\n      })\n  }\n  const onFinishFailed = errorInfo => {\n  }\n  return(\n    <>\n      <h1>Autos</h1>\n      <Row>\n        <Col>\n          <Form\n            {...layout}\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onBtnScrape}\n            onFinishFailed={onFinishFailed}\n          >\n            <Form.Item\n              label=\"Pages to scrap\"\n              name=\"pages\"\n              // rules={[{ required: true, message: 'Please input your username!' }]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item {...tailLayout}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n      <Table dataSource={autos} columns={autos_columns}/>\n    </>\n  );\n};\n\nexport default Autos;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useLocation\n} from \"react-router-dom\";\nimport {\n  Layout,\n  Menu,\n} from 'antd';\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\nimport Motos from './pages/motos';\nimport MotosSidebar from './sidebar/motos_sidebar';\nimport WorkanaJobs from './pages/workana_jobs';\nimport WorkanaSidebar from './sidebar/workana_sidebar';\nimport WorkanaMongo from './pages/workana_mongo';\nimport Extra from './pages/extra';\nimport WorkanaGrafs from './pages/workana_grafs';\nimport Bienvenido from './pages/bienvenido';\nimport BienvenidoSidebar from './sidebar/bienvenido_sidebar';\nimport Autos from './pages/autos';\n\nconst {\n  Footer,\n  Content,\n  Header,\n  Sider,\n} = Layout;\n\nfunction App() {\n  console.log(useLocation.pathname)\n  return (\n    <Router>\n      <Layout>\n        <Header>\n          <div className=\"logo\" />\n          <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[]}>\n            <Menu.Item key=\"1\">\n              <Link to=\"/\">\n                Bienvenido\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"2\">\n              <Link to=\"/workana\">Workana</Link>\n            </Menu.Item>\n            <Menu.Item key=\"3\">\n              <Link to=\"/extra\">Extra</Link>\n            </Menu.Item>\n            <Menu.Item key=\"4\">\n              <Link to=\"/autos\">Autos</Link>\n            </Menu.Item>\n          </Menu>\n        </Header>\n        <Layout>\n        <Sider>\n          <Switch>\n            <Route path=\"/workana\">\n              <WorkanaSidebar/>\n            </Route>\n            <Route path=\"/autos\">\n              <h1>Nada</h1>\n            </Route>\n            <Route path=\"/extra\">\n              <h1>Nada</h1>\n            </Route>\n            <Route path=\"/\">\n              <BienvenidoSidebar/>\n            </Route>\n          </Switch>\n        </Sider>\n        <Content className=\"contenido\">\n          <Switch>\n            <Route path=\"/workana/grafs\">\n              <WorkanaGrafs/>\n            </Route>\n            <Route path=\"/workana/mongo\">\n              <WorkanaMongo/>\n            </Route>\n            <Route path=\"/extra\">\n              <Extra />\n            </Route>\n            <Route path=\"/workana\">\n              <WorkanaJobs/>\n            </Route>\n            <Route path=\"/autos\">\n              <Autos/>\n            </Route>\n            <Route path=\"/\">\n              <Bienvenido/>\n            </Route>\n          </Switch>\n        </Content>\n        </Layout>\n        <Footer>Footer</Footer>\n      </Layout>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}